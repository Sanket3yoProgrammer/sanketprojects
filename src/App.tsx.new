import { useState, useEffect, useRef } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { Menu, X, Github, Heart, Mail, Sun, Moon, FolderKanban, Plus, Loader2, ArrowRightCircle, Info, User, User2 } from "lucide-react";
import { Switch, Route, Link, Router as WouterRouter } from "wouter";
import { queryClient } from "@/lib/queryClient";
import { QueryClientProvider } from "@tanstack/react-query";
import { Toaster } from "@/components/ui/toaster";
import UploadPage from "@/pages/upload";
import NotFound from "@/pages/not-found.tsx";
import About from "@/pages/about.tsx"; 
import './styles.css'; // styles
import Cursor from "@/components/Cursor"; 
import Profile from "@/components/Profile";
import { ProjectsHome } from "@/components/ProjectsHome";
import ProjectDetails from "@/pages/project-details";

function MobileMenu({ isOpen, setIsOpen }: { isOpen: boolean; setIsOpen: (value: boolean) => void }) {
  return (
    <AnimatePresence>
      {isOpen && (
        <motion.div
          initial={{ opacity: 0, x: "100%" }}
          animate={{ opacity: 1, x: 0 }}
          exit={{ opacity: 0, x: "100%" }}
          transition={{ type: "spring", bounce: 0, duration: 0.4 }}
          className="fixed inset-y-0 right-0 w-full sm:w-64 bg-white/95 dark:bg-black/95 backdrop-blur-lg z-50"
        >
          <div className="flex flex-col p-6">
            <button
              onClick={() => setIsOpen(false)}
              className="self-end text-gray-300 dark:text-gray-700 mb-8"
            >
              <X size={24} />
            </button>
            <nav className="flex flex-col space-y-4">
              <Link
                to="/"
                onClick={() => setIsOpen(false)}
                className="text-xl text-gray-700 dark:text-gray-300 hover:text-black dark:hover:text-white flex items-center gap-2"
              >
                <FolderKanban size={20} />
                {/* <img src="https://firebasestorage.googleapis.com/v0/b/uploadyoio.appspot.com/o/image%2Fyo-logo?alt=media&token=91f79586-a3e7-4c4d-a507-9857747f3e38" className="size-8" /> */}
                Projects
              </Link>
              
              <Link
                to="/about"
                onClick={() => setIsOpen(false)}
                className="text-xl text-gray-700 dark:text-gray-300 hover:text-black dark:hover:text-white flex items-center gap-2"
              >
                <User2 size={20} />
                About Me
              </Link>
            </nav>
          </div>
        </motion.div>
      )}
    </AnimatePresence>
  );
}

function Navbar({ isOpen, setIsOpen, darkMode, toggleDarkMode }: {
  isOpen: boolean;
  setIsOpen: (value: boolean) => void;
  darkMode: boolean;
  toggleDarkMode: () => void;
}) {
  return (
    <nav className="fixed w-full bg-gradient-to-r from-blue-500 to-blue-700 dark:bg-gradient-to-r from-purple-700 to-purple-900 backdrop-blur-md z-40">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex items-center justify-between h-16">
          <a href="https://sanketme-projects.vercel.app" className="text-xl font-bold text-white flex items-center gap-2">
          <img src="https://firebasestorage.googleapis.com/v0/b/uploadyoio.appspot.com/o/image%2Fyo-logo?alt=media&token=91f79586-a3e7-4c4d-a507-9857747f3e38" className="size-8" />
            Portfolio
          </a>

          <div className="hidden md:flex items-center space-x-4">
            <Link to="/" className="text-gray-100 dark:text-gray-100 hover:text-white dark:hover:text-yellow-400 px-3 py-2 flex items-center gap-2">
              <FolderKanban size={20} />
              Projects
            </Link>
            <Link to="/about" className="text-gray-100 dark:text-gray-100 hover:text-white dark:hover:text-yellow-400 px-3 py-2 flex items-center gap-2">
            <User2 size={20} />
              About Me
            </Link>
            
            <button
              onClick={toggleDarkMode}
              className="p-2 rounded-full hover:bg-gray-700/20 dark:hover:bg-gray-300/20"
            >
              {darkMode ? <Sun className="text-yellow-300" /> : <Moon className="text-gray-100" />}
            </button>
          </div>
          <div className="md:hidden flex items-center space-x-4">
            <button
              onClick={toggleDarkMode}
              className="p-2 rounded-full hover:bg-gray-700/20 dark:hover:bg-gray-300/20"
            >
              {darkMode ? <Sun className="text-yellow-300" /> : <Moon className="text-gray-100" />}
            </button>
            <button onClick={() => setIsOpen(!isOpen)} className="text-white">
              <Menu size={24} />
            </button>
          </div>
        </div>
      </div>
    </nav>
  );
}

function App() {
  const [darkMode, setDarkMode] = useState(true);
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);

  useEffect(() => {
    if (darkMode) {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }
  }, [darkMode]);

  const toggleDarkMode = () => {
    setDarkMode(!darkMode);
  };

  return (
    <QueryClientProvider client={queryClient}>
      <div className={`${darkMode ? 'dark' : ''} min-h-screen bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100`}>
        <Cursor />
        <Navbar 
          isOpen={mobileMenuOpen} 
          setIsOpen={setMobileMenuOpen} 
          darkMode={darkMode} 
          toggleDarkMode={toggleDarkMode} 
        />
        <MobileMenu isOpen={mobileMenuOpen} setIsOpen={setMobileMenuOpen} />
        <div className="pt-16">
          <Switch>
            <Route path="/" component={ProjectsHome} />
            <Route path="/project/:id" component={ProjectDetails} />
            <Route path="/upload" component={UploadPage} />
            <Route path="/about" component={About} />
            <Route component={NotFound} />
          </Switch>
        </div>
        <Toaster />
      </div>
    </QueryClientProvider>
  );
}

export default App;
